<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<http auto-config="true">		
		<intercept-url pattern="/webjars/**" access="permitAll" />		
		<intercept-url pattern="/" access="hasRole('EMPLOYEE')" />
		<intercept-url pattern="/leaders/**" access="hasRole('MANAGER')" />
		<intercept-url pattern="/systems/**" access="hasRole('ADMIN')" />
		<!-- <intercept-url pattern="/**" access="isAuthenticated()" /> -->			
		
		<form-login 
			login-page="/showMyLoginPage" 
			login-processing-url="/authenticateTheUser" 
		/>
		<logout/>
		<access-denied-handler error-page="/access-denied"/>
	</http>

	<authentication-manager>
		<!-- <authentication-provider user-service-ref="userDetailsService"/> -->
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource" />
		</authentication-provider>
	</authentication-manager>
	
	<!-- to be added inded the jdbc-user-service tag 
		users-by-username-query="select user_id, pw, active from members where user_id=?"
		authorities-by-username-query="select user_id, role from roles where user_id=?" 
	-->

	<!-- <beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean> -->
	
	<beans:bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<beans:property name="driverClass" value="${jdbc.driverClassName}"/>
		<beans:property name="jdbcUrl" value="${jdbc.url}"/>
		<beans:property name="user" value="${jdbc.userName}"/>
		<beans:property name="password" value="${jdbc.password}"/>
		
		<beans:property name="initialPoolSize" value="${connection.pool.initialPoolSize}"/>
		<beans:property name="minPoolSize" value="${connection.pool.minPoolSize}"/>
		<beans:property name="maxPoolSize" value="${connection.pool.maxPoolSize}"/>
		<beans:property name="maxIdleTime" value="${connection.pool.maxIdleTime}"/>
	</beans:bean>
	
	<context:property-placeholder location="classpath:/db.properties" />
</beans:beans>
